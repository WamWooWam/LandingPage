import { CalcManager } from "./CalcManager/CalcManager";

export function CreateButtonMap({ Command }: typeof CalcManager) {
    enum NumbersAndOperatorsEnum {
        Zero = Command.Num0,
        One = Command.Num1,
        Two = Command.Num2,
        Three = Command.Num3,
        Four = Command.Num4,
        Five = Command.Num5,
        Six = Command.Num6,
        Seven = Command.Num7,
        Eight = Command.Num8,
        Nine = Command.Num9,
        Add = Command.ADD,
        Subtract = Command.SUB,
        Multiply = Command.MUL,
        Divide = Command.DIV,
        Invert = Command.REC,
        Equals = Command.EQU,
        Decimal = Command.PNT,
        Sqrt = Command.SQRT,
        Percent = Command.PERCENT,
        Negate = Command.SIGN,
        Backspace = Command.BACK,
        ClearEntry = Command.CENTR,
        Clear = Command.CLEAR,
        Degree = Command.DEG,
        Radians = Command.RAD,
        Grads = Command.GRAD,
        Degrees = Command.Degrees,
        OpenParenthesis = Command.OPENP,
        CloseParenthesis = Command.CLOSEP,
        Pi = Command.PI,
        Sin = Command.SIN,
        Cos = Command.COS,
        Tan = Command.TAN,
        Factorial = Command.FAC,
        XPower2 = Command.SQR,
        Mod = Command.MOD,
        FToE = Command.FE,
        LogBaseE = Command.LN,
        InvSin = Command.ASIN,
        InvCos = Command.ACOS,
        InvTan = Command.ATAN,
        LogBase10 = Command.LOG,
        XPowerY = Command.PWR,
        YRootX = Command.ROOT,
        TenPowerX = Command.POW10,
        EPowerX = Command.POWE,
        Exp = Command.EXP,
        IsScientificMode = Command.ModeScientific,
        IsStandardMode = Command.ModeBasic,
        None = Command.NULL,
        IsProgrammerMode = Command.ModeProgrammer,
        DecButton = Command.Dec,
        OctButton = Command.Oct,
        HexButton = Command.Hex,
        BinButton = Command.Bin,
        And = Command.And,
        Ror = Command.ROR,
        Rol = Command.ROL,
        Or = Command.OR,
        Lsh = Command.LSHF,
        Rsh = Command.RSHF,
        Xor = Command.Xor,
        Not = Command.Not,
        A = Command.NumA,
        B = Command.NumB,
        C = Command.NumC,
        D = Command.NumD,
        E = Command.NumE,
        F = Command.NumF,
        Memory = -1, // This is the memory button. Doesn't have a direct mapping to the CalcEngine.
        Sinh = Command.SINH,
        Cosh = Command.COSH,
        Tanh = Command.TANH,
        InvSinh = Command.ASINH,
        InvCosh = Command.ACOSH,
        InvTanh = Command.ATANH,
        Qword = Command.Qword,
        Dword = Command.Dword,
        Word = Command.Word,
        Byte = Command.Byte,
        Cube = Command.CUB,
        DMS = Command.DMS,
        Hyp = Command.HYP,
        Sec = Command.SEC,
        Csc = Command.CSC,
        Cot = Command.COT,
        InvSec = Command.ASEC,
        InvCsc = Command.ACSC,
        InvCot = Command.ACOT,
        Sech = Command.SECH,
        Csch = Command.CSCH,
        Coth = Command.COTH,
        InvSech = Command.ASECH,
        InvCsch = Command.ACSCH,
        InvCoth = Command.ACOTH,
        CubeRoot = Command.CUBEROOT,
        TwoPowerX = Command.POW2,
        LogBaseY = Command.LogBaseY,
        Nand = Command.Nand,
        Nor = Command.Nor,
        Abs = Command.Abs,
        Floor = Command.Floor,
        Ceil = Command.Ceil,
        Rand = Command.Rand,
        Euler = Command.Euler,
        RshL = Command.RSHFL,
        RolC = Command.ROLC,
        RorC = Command.RORC,

        BINSTART = Command.BINEDITSTART,
        BINPOS0 = Command.BINPOS0,
        BINPOS1 = Command.BINPOS1,
        BINPOS2 = Command.BINPOS2,
        BINPOS3 = Command.BINPOS3,
        BINPOS4 = Command.BINPOS4,
        BINPOS5 = Command.BINPOS5,
        BINPOS6 = Command.BINPOS6,
        BINPOS7 = Command.BINPOS7,
        BINPOS8 = Command.BINPOS8,
        BINPOS9 = Command.BINPOS9,
        BINPOS10 = Command.BINPOS10,
        BINPOS11 = Command.BINPOS11,
        BINPOS12 = Command.BINPOS12,
        BINPOS13 = Command.BINPOS13,
        BINPOS14 = Command.BINPOS14,
        BINPOS15 = Command.BINPOS15,
        BINPOS16 = Command.BINPOS16,
        BINPOS17 = Command.BINPOS17,
        BINPOS18 = Command.BINPOS18,
        BINPOS19 = Command.BINPOS19,
        BINPOS20 = Command.BINPOS20,
        BINPOS21 = Command.BINPOS21,
        BINPOS22 = Command.BINPOS22,
        BINPOS23 = Command.BINPOS23,
        BINPOS24 = Command.BINPOS24,
        BINPOS25 = Command.BINPOS25,
        BINPOS26 = Command.BINPOS26,
        BINPOS27 = Command.BINPOS27,
        BINPOS28 = Command.BINPOS28,
        BINPOS29 = Command.BINPOS29,
        BINPOS30 = Command.BINPOS30,
        BINPOS31 = Command.BINPOS31,
        BINPOS32 = Command.BINPOS32,
        BINPOS33 = Command.BINPOS33,
        BINPOS34 = Command.BINPOS34,
        BINPOS35 = Command.BINPOS35,
        BINPOS36 = Command.BINPOS36,
        BINPOS37 = Command.BINPOS37,
        BINPOS38 = Command.BINPOS38,
        BINPOS39 = Command.BINPOS39,
        BINPOS40 = Command.BINPOS40,
        BINPOS41 = Command.BINPOS41,
        BINPOS42 = Command.BINPOS42,
        BINPOS43 = Command.BINPOS43,
        BINPOS44 = Command.BINPOS44,
        BINPOS45 = Command.BINPOS45,
        BINPOS46 = Command.BINPOS46,
        BINPOS47 = Command.BINPOS47,
        BINPOS48 = Command.BINPOS48,
        BINPOS49 = Command.BINPOS49,
        BINPOS50 = Command.BINPOS50,
        BINPOS51 = Command.BINPOS51,
        BINPOS52 = Command.BINPOS52,
        BINPOS53 = Command.BINPOS53,
        BINPOS54 = Command.BINPOS54,
        BINPOS55 = Command.BINPOS55,
        BINPOS56 = Command.BINPOS56,
        BINPOS57 = Command.BINPOS57,
        BINPOS58 = Command.BINPOS58,
        BINPOS59 = Command.BINPOS59,
        BINPOS60 = Command.BINPOS60,
        BINPOS61 = Command.BINPOS61,
        BINPOS62 = Command.BINPOS62,
        BINPOS63 = Command.BINPOS63,
        BINEND = Command.BINEDITEND,

        // Enum values below are used for Tracelogging and do not map to the Calculator engine
        MemoryAdd = Command.MPLUS,
        MemorySubtract = Command.MMINUS,
        MemoryRecall = Command.RECALL,
        MemoryClear = Command.MCLEAR,
        BitflipButton = 1000,
        FullKeypadButton = 1001
    };

    return NumbersAndOperatorsEnum;
}